
char *mcodetbl[] =
{
 ".-", "-...", "-.-.", "-..",
 ".", "..-.", "--.", "....",
 "..", ".---", ".-.-", ".-..",
 "--", "-.", "---", ".--.",
 "--.-", ".-.", "...", "-",
 "..-", "...-", ".--", "-..-",
 "-.--", "--.."
};

void CharToMorsecode(char c, char* Morsecode)
{
  
  
  switch(c)
  {
    case 'A': Morsecode=mcodetbl[0];
    break;
    case 'B': Morsecode=mcodetbl[1];
    break;
    case 'C': Morsecode=mcodetbl[2];
    break;
    case 'D': Morsecode=mcodetbl[3];
    break;
    case 'E': Morsecode=mcodetbl[4];
    break;
    case 'F': Morsecode=mcodetbl[5];
    break;
    case 'G': Morsecode=mcodetbl[6];
    break;
    case 'H': Morsecode=mcodetbl[7];
    break;
    case 'I': Morsecode=mcodetbl[8];
    break;
    case 'J': Morsecode=mcodetbl[9];
    break;
    case 'K': Morsecode=mcodetbl[10];
    break;
    case 'L': Morsecode=mcodetbl[11];
    break;
    case 'M': Morsecode=mcodetbl[12];
    break;
    case 'N': Morsecode=mcodetbl[13];
    break;
    case 'O': Morsecode=mcodetbl[14];
    break;
    case 'P': Morsecode=mcodetbl[15];
    break;
    case 'Q': Morsecode=mcodetbl[16];
    break;
    case 'R': Morsecode=mcodetbl[17];
    break;
    case 'S': Morsecode=mcodetbl[18];
    break;
    case 'T': Morsecode=mcodetbl[19];
    break;
    case 'U': Morsecode=mcodetbl[20];
    break;
    case 'V': Morsecode=mcodetbl[21];
    break;
    case 'W': Morsecode=mcodetbl[22];
    break;
    case 'X': Morsecode=mcodetbl[23];
    break;
    case 'Y': Morsecode=mcodetbl[24];
    break;
    case 'Z': Morsecode=mcodetbl[25];
    break;
    default: Morsecode=0;
  }
}


void MorsecodeToBlink(char* Morsecode)
{
  while(*Morsecode!=NULL)
  {
    if(*Morsecode=='.')
    {
      REG_PIOC_SODR=1<<30;
      delay(1000);
    }
    else if(*Morsecode=='-')
    {
      REG_PIOC_CODR=1<<30;
      delay(1000);
    }
    Morsecode++;
  }
}


void mencode(char* s)
{
  char* Morsecode;
  while(*s!=NULL)
  {
    CharToMorsecode(s, Morsecode);
    MorsecodeToBlink(Morsecode);
    s++;
  }
}

void setup() {
  REG_PIOC_PER=1<<30;
  REG_PIOC_OER=1<<30;
  REG_PIOC_MDDR=1<<30;
}


void loop() {
  REG_PIOC_ODSR = (1<<13); 
  delay(1);               // wait for a second
  REG_PIOC_ODSR = (1<<12); 
  delay(1);               // wait for a second
}

